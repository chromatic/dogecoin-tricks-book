=encoding utf-8

=head0 Manage a Dogecoin Arcade

Z<chapter_dogecade>

As if this book weren't nerdy and technical enough, here's a full, working
example to tie everything together: a design and implementation for an arcade
taking payments in  Dogecoin.

This example has a lot to recommend it. It brings Dogecoin into the real world.
It represents small, self-contained transactions. It uses the network for its
strengths: making small payments quickly.

Regardless of whether you have actual video game hardware, emulation or
virtualization systems, or no hardwareN<Maybe you have little interest in
arcade games.  That's fine too!>, this system's design and implementation will
work for many types of payments made or received on the Dogecoin network. You
might run a coffee shop or volunteer at a farmer's market or have a great bake
sale fundraising idea or any of a thousand other things.

You might have physical hardware too: a pinball machine by your front door, or
a claw machine, or a cold drink dispenser or something even cooler we haven't
invented yet.

Bringing Dogecoin into the real world requires some integration, but all of the
parts are within your reach. Let's start by assuming you have a combination of
hardware and software.

L<associate_addresses_to_machines>

L<practice_safe_wallet_hygiene>

L<rotate_machine_addresses>

L<manage_tokens>

L<sell_event_admission>

L<derive_more_addresses>
