=encoding utf-8

=head0 *Preface

Dogecoin is the Internet's original meme-based cryptocurrency.

That sentence may read like a bunch of nerdy nonsense. Don't worry; it is!
Fortunately, this book will make it clearer. While it will remain nerdy
nonsense, you'll understand it and be able to have fun, do cool things, and
show off your new knowledge to friends at partiesN<Talk about other things too;
we want you invited I<back>.>.

Let's explain that first sentence.

I<Dogecoin> is the subject of this book.

I<The Internet> is a globally-distributed network of computers where people and
machines communicate in words, pictures, video, audio, and other data.

X<meme>

A I<meme> is an idea, often clever or ironic or sarcastic or joking, which
spreads easily between people. It often takes the form of an image or video.

X<cryptocurrency>

I<Cryptocurrency> is a mechanism to record digital transactions over the
Internet between people who don't necessarily trust each other as individuals
but who agree, as a group, to communicate in rigorous ways to make the entire
network of people trustworthy enough to serve as a mechanism of financial
exchange.

Whew.

The crypto stuff can get a lot deeper, but most of it summarizes to this: you
don't have to take someone's word that they're trustworthy. You should be able
to verify it.

If that sounds like a lot of work with a bunch of serious nerds doing serious
nerd stuff, remember that Dogecoin has a friendly dog mascot with a bunch of
silly memes. The point is to have fun.

I<Fun> is what this book is about.

=begin sidebar What do I need?

This book assumes you have access to a computer somewhere (though some of the
tricks will work on mobile devices such as phones and tablets), have access to
the Internet, and can download and install and run software.

X<Dogecoin Core; trustworthy links>

At the time of this writing, you can visit U<dogecoin.com> for links and
information about how to download and run the Dogecoin Core. Don't take our
word for it though; check online if that's still the home of the Core. Test
that against other sites such as U<https://github.com/dogecoin/dogecoin>, the
Dogecoin Reddit at U<https://reddit.com/r/dogecoin/> and other locations.  If
something seems off to you, then ask questions. Honest, helpful people will
give you good answers and help you verify them for yourself.

=end sidebar

=head1 *How to Read This Book

X<< obscure references; I<Letters to Malcolm> >>

Fun is the serious business of Dogecoin, so please read this book in a way that
I<you> enjoy. Maybe that's front to back or back to front or skipping around.
Maybe you read a couple of pages before going to sleep to relax you or teach
your brain a lesson. The only I<wrong> way to read this book is a way that you
don't enjoy.

The book starts by assuming you're new to cryptography, cryptocurrency, and
Dogecoin. Earlier pages introduce concepts that later pages expand, but it's
fine to skip around. Skim the table of contents. Look at the names of every
chapter and every tip. If something grabs your attention, read that first.
Repeat.

This book also makes explicit links between ideas. Concepts introduced early
reappear later. You'll see themes repeated throughout the book--on purpose.
It's just as valid to breeze through this book on a lazy summer afternoon as it
is to skim through it over the period of weeks, months, or years. Feel free to
set it down and come back to it later; all of the information will be waiting
for you. Ideally each tip has enough breadcrumbs to point to other places that
you can remind yourself where you were in your journey at the time.

Put this book on your bedside table. Face it out on from the bookshelf behind
you when you're on video calls. Carry it when you're walking, riding the train,
or enjoying a cannolo from a park bench downtown. Lend a copy to your friends
and donate a copy to your local library. Above all, embrace the fun. Your
author believes that learning things can be enjoyable and being in control of
your own coins is liberating and powerful. There's a lot to learn, but it
doesn't have to be intimidating. It can be fun and playful.

With that said, take note of a couple of things.

=head2 *Cryptocurrency Isn't Only Dogecoin

Although this book I<focuses> on Dogecoin, the basic concepts and a lot of the
ideas apply to multiple cryptocurrencies, especially coins with a similar
lineage. A lot of this book applies to BitcoinN<See U<https://bitcoin.org/>.>.
Much of it applies to LitecoinN<See U<https://litecoin.org/>.>, as well as
other forks of Bitcoin and Dogecoin--currencies like PepecoinN<See
U<https://pepecoin.org/>.> and DingocoinN<See U<https://dingocoin.com/>.>.

Many of the examples will work with small or minor modifications. If you prefer
one of those other coins over Dogecoin, that's totally okay! You can still
learn a lot and have the appropriate amount of fun. We all share some common
ground, including code, so we can all learn from each other.

What will you need to change? The names of executable files, for example, are
different between coins. Where you launch the Dogecoin Core wallet GUI via a
program named C<dogecoin-qt>, you launch the Pepecoin equivalent via
C<pepecoin-qt>. Similarly, wallet addresses are all different, as are the ports
used to connect to each coin's network and RPC mechanisms. It's okay if this
seems like a lot of overwhelming detail now; it will make more sense when
you really need to know it.

Consult the documentation for a different coin for details on what needs to
change.

=head2 *Programmable Money Brings Risks

Even if the only thing we used cryptocurrency for were to track scores in a
massive, multiplayer online game, we'd still face risk. Money or any value
makes those risks more serious. Scammers, thieves, grifters, and other bad
actors are, unfortunately, a part of the landscape. Where possible, this book
attempts to identify risks to you, the people you care about, and the other
people in the community. It's up to you to keep yourself and others safe, but
it's only possible to ameliorate risks you know about. Read the risk sections
carefully and think about other things that could go wrong.

If you're not sure, ask. After you ask, verify. This is also a book about ways
to prove things, and knowledge and proof are power.

=head2 *A Little Programming Can Be Fun

This book contains code. If you're familiar with programming in a language such
as Python, Ruby, JavaScript, or Perl, you're in a position to get the most out
of it. If you've never done this before, that's okay too! The code is there to
explain and illustrate concepts, but you don't have to be a programmer to use
programmable money effectively.

With that said, you I<will> get the most out of this book if you're comfortable
installing and configuring software, especially working with configuration
files and the command line. If you have a trusted friend to help you, you can
learn a lot and take control of your system in ways you previously didn't
understand.

In short, if you're comfortable working with a spreadsheet, you know enough to
get technical with Dogecoin!

=head2 *You Can Grow with This Book

Perhaps you picked up this book because it has cute dogs on the cover and
you're not yet ready to build a pinball museum where people pay for credits
with cryptocurrency. That's okay! If you read one tip every week, you'll get
through this book in two years. That's not a bad investment of lazy Sunday
afternoons. At that point, you may be full of other ideas no one has thought of
before as well as new skills to bring them to life.

=head1 *Credits

This work, as expected, has turned out to have required the assistance of many
people.

X<people; RNB>
X<people; meta_rach>
X<people; mishaboar>
X<people; Patrick Lodder>

Thank you to RNBN<U<https://twitter.com/RNB333>> and
RachelN<U<https://twitter.com/meta_rach>> for editorial questions and
suggestions which led to several of these tips!

Thank you to MishaboarN<U<https://twitter.com/Mishaboar>> for advice,
perspective, and helping promote a deep empathy for other people--as well as the lovely foreword!

Thank you to Patrick LodderN<U<https://github.com/patricklodder/>> for technical
advice and always-trenchant corrections.

Any remaining errors are the fault of the sometimes-too-clever author.
