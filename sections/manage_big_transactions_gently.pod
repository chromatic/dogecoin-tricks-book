=head1 Manage Big Transactions Gently

Z<manage_big_transactions_gently>

The very thing that makes Dogecoin work as a globally-distributed,
permissionless network to send and receive transactions also makes it
complicated: miners and nodes will do what they will do when they receive,
evaluate, confirm, and retransmit transactions. No single central authority
exists that can say "This transaction moving a million Doge is more important
than this transaction moving 1 Doge"; it's all about what the network as a
whole decides to do.

You can use this information to be a good network participant.

=head2 *Transactions and Blocks

The blockchain underlying Dogecoin organizes itself in terms of I<blocks>. A
block is a big batch of transactions bundled together and mined about every 60
seconds. Miners bundle pending transactions into blocks and, when everything
verifies correctly, issue a new block for everyone else to analyze and store in
the blockchain permanently.

A Dogecoin block is 1 MB in size. That's enough space for 2400 average-sized
transactions. The fuller the block, the more efficient the network is. However,
the fuller the blocks over a period of time, the more chance that any one
transaction will be delayed to a new block. With a mining time of about 60
seconds, every delay of one block can add one minute to confirmation time.

If you are sending a lot of transactions I<or> you're sending especially large
transactions, there's a chance your transactions could fill up the entire
block. In this case, the kind thing to do is to ask the network to
de-prioritize your transactions to let other transactions through first.

For example, if you're consolidating a bunch of Dogecoin from a couple of
hundred addresses into a couple of new addressees, your transaction will have
to refer to every unspent output of those consolidated addresses as well as the
new addresses. That could be a large transaction. Ask yourself if you have to
finish this I<right now> or if it can happen when the network has enough
capacity your transaction won't bump others.

=head3 *Transaction Costs

In the current stable Dogecoin Core release (1.14.8), the recommended
transaction fee is 0.01 Dogecoin per kilobyte of transaction size. Unless you
create a transaction by hand or change this value yourself via the Core, this
is what you'll offer to pay miners to include your transaction in a block. The
more core nodes that run code that accepts this transaction fee, the more
likely the network will accept your transaction request.

Because this has been the recommended default since Dogecoin Core 1.14.5, this
is a good number to use.

To be a good network neighbor, you want to allow everyone else to use the
default but you want to pay a little bit less so that nodes will prefer other
transactions when filling up a block. If there's space left over, they can pick
up your transaction. Pick a value slightly below 0.01 Doge per kilobyte;
perhaps 0.0098 Doge per kilobyte.
L<figure-dogecoin-core-custom-transaction-fee-screenshot> shows an example.

=begin figure Custom Transaction Fee Configuration

Z<figure-dogecoin-core-custom-transaction-fee-screenshot>

F<images/dogecoin-core-custom-transaction-fee-screenshot.png>

=end figure

With this value selected, nodes which prioritize transactions based on
transaction fees will prefer default transaction fee transactions to yours. If
the current block is empty, your transaction can go through soon. If there's
any kind of congestion, your transaction will wait until everything else clears
and there's space remaining.

=head2 *Understand the Risks

Changing transaction fee defaults always provides the risk of changing how the
rest of the network sees your transaction. Set this value too high and you may
end up overpaying for a place in a block you'd have reached anyhow. Set this
value too low and your transaction might never get processed into a block.
Because you don't necessarily know how many other transactions will be pending
when the network receives yours, there's always a guessing game involved.

The default should work well in most situations. This approach works best when
you're not in a hurry and you want to let other transactions settle more
quickly. You won't find yourself doing this often, but when you do, the rest of
the network will thank you for it.
